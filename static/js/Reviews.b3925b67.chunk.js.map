{"version":3,"file":"static/js/Reviews.b3925b67.chunk.js","mappings":"2NACA,EAAuB,sB,SCKR,SAASA,IACrB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACOC,GAAMC,EAAAA,EAAAA,MAAND,GAKJ,OAJHE,EAAAA,EAAAA,YAAU,YACPC,EAAAA,EAAAA,IAAaH,GAAII,KAAKL,KACtB,CAACC,KAGJ,8BACCF,EAAOO,OAAS,GACd,eAAIC,UAAWC,EAAf,SACCT,EAAOU,KAAI,SAAAC,GACT,OACG,2BAEG,qCAAaA,EAAMC,WACnB,uBAAID,EAAME,YAFRF,EAAMT,UASjB,cAAGM,UAAWC,EAAd,6C,gKC1BAK,EAAM,gCACNC,EAAM,mCAECC,EAAmB,WAC9B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAAqCC,IAC/CT,MAAK,SAAAY,GACH,OAAGA,EAASC,GACFD,EAASE,OAGZC,QAAQC,OAAO,IAAIC,MAAM,2CAGzBC,EAAa,SAAAC,GAC1B,OAAOR,MAAM,GAAD,OAAIH,EAAJ,gCAA+BC,EAA/B,kBAA4CU,IACvDnB,MAAK,SAAAY,GACH,OAAGA,EAASC,GACFD,EAASE,OAGZC,QAAQC,OAAO,IAAIC,MAAM,2CAGtBG,EAAa,SAAAxB,GACvB,OAAOe,MAAM,GAAD,OAAIH,EAAJ,iBAAgBZ,EAAhB,oBAA8Ba,IACzCT,MAAK,SAAAY,GAAQ,OAAIA,EAASE,UAC1Bd,MAAK,SAAAqB,GAEN,OADAA,EAAKC,OAASD,EAAKC,OAAOC,SAAQ,qBAAGC,QAAiBC,KAAK,MACpDJ,MAMGK,EAAY,SAAA9B,GACtB,OAAOe,MAAM,GAAD,OAAIH,EAAJ,iBAAgBZ,EAAhB,4BAAsCa,IACjDT,MAAK,SAAAY,GAAQ,OAAIA,EAASE,UAC1Bd,MAAK,SAAAqB,GACH,OAAOM,EAAAA,EAAAA,IAAWN,EAAKO,UAIhB7B,EAAe,SAAAH,GAC5B,OAAOe,MAAM,GAAD,OAAIH,EAAJ,iBAAgBZ,EAAhB,4BAAsCa,IACjDT,MAAK,SAAAY,GAAQ,OAAIA,EAASE,UAC1Bd,MAAK,SAAAqB,GACH,OAAOQ,EAAAA,EAAAA,IAAcR,EAAKS,c,qGCjDtB,IAAOC,EAAoB,SAACrC,GAChC,OAAOA,EAAOU,KAAI,kBACjB,CACER,GAFe,EAAEA,GAGjBoC,MAHe,EAAMA,WAOVL,EAAa,SAACjC,GACzB,OAAOA,EAAOU,KAAI,kBACjB,CACCR,GAFgB,EAAEA,GAGlB4B,KAHgB,EAAMA,KAItBS,aAJgB,EAAYA,aAK5BC,UALgB,EAA0BA,eAoB5BL,EAAgB,SAACnC,GAC3B,OAAOA,EAAOU,KAAI,kBACjB,CACCR,GAFgB,EAAGA,GAGnBU,OAHgB,EAAOA,OAIvBC,QAJgB,EAAeA","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","service/api.js","utils/mapper.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\"};","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {fetchReviews} from '../../service/api';\nimport s from './Reviews.module.css';\n\nexport default function Reviews() {  \n   const [movies, setMovies] = useState([]);\n   const {id} = useParams();\n   useEffect(() => {\n      fetchReviews(id).then(setMovies);\n   }, [id]);\n   \n      return (\n   <>\n   {movies.length > 0 ? (\n      <ul className={s.list}>\n      {movies.map(movie => {\n         return (\n            <li\n            key={movie.id}>\n               <h2>Author: {movie.author}</h2>\n               <p>{movie.content}</p>\n           </li>\n         )\n      })}\n   </ul>\n   ) : \n   (\n      <p className={s.list}>Sorry, there are no reviews</p>\n    )\n   }\n   \n   </>\n      );\n   }\n   Reviews.propTypes = {\n      reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          author: PropTypes.string.isRequired,\n          content: PropTypes.string.isRequired,\n        })\n      ),\n    };","import {mapperCast} from '../utils/mapper';\nimport {mapperReviews} from '../utils/mapper';\n// import {mapperMovieEl} from '../utils/mapper';\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'da16a0fca1d07603f8ad5b63eb5e61b5';\n\nexport const fetchTrendingDay = () => {\n  return fetch(`${URL}trending/movie/day?api_key=${KEY}`)\n   .then(response => {\n      if(response.ok) {\n         return response.json();\n      }\n   \n      return Promise.reject(new Error('Nothing was found for your request'));})   \n};\n\nexport const fetchValue = value => {\nreturn fetch(`${URL}search/movie?api_key=${KEY}&query=${value}`)\n.then(response => {\n   if(response.ok) {\n      return response.json();\n   }\n\n   return Promise.reject(new Error('Nothing was found for your request'));})   \n};\n\nexport const fetchMovie = id => {\n   return fetch(`${URL}movie/${id}?api_key=${KEY}`)\n   .then(response => response.json())\n   .then(data => { \n   data.genres = data.genres.flatMap(({ name }) => name).join(', ');\n   return data; \n    \n   })\n  \n};\n\nexport const fetchCast = id => {\n   return fetch(`${URL}movie/${id}/credits?api_key=${KEY}`)\n   .then(response => response.json())\n   .then(data => {\n      return mapperCast(data.cast);\n   });\n};\n\nexport const fetchReviews = id => {\nreturn fetch(`${URL}movie/${id}/reviews?api_key=${KEY}`)\n.then(response => response.json())\n.then(data => {\n   return mapperReviews(data.results);\n})\n};","export const  mapperMoviesTitle = (movies) => {\n   return movies.map(({id, title, }) =>\n   ({\n      id,\n      title,\n   }));\n   };\n\n   export const  mapperCast = (movies) => {\n      return movies.map(({id, name, profile_path, character}) =>\n      ({\n        id,\n        name,\n        profile_path,\n        character, \n      }));\n      };  \n\n      export const mapperMovieEl = (movies) => {\n         return movies.map(({ title, popularity, overview, genres, poster_path}) =>\n         ({\n           genres,\n           title,\n           popularity,\n           overview,\n           poster_path, \n         }));\n         };  \n\n         export const mapperReviews = (movies) => {\n            return movies.map(({ id, author, content,}) =>\n            ({\n              id,\n              author,\n              content,\n            }));\n            };  "],"names":["Reviews","useState","movies","setMovies","id","useParams","useEffect","fetchReviews","then","length","className","s","map","movie","author","content","URL","KEY","fetchTrendingDay","fetch","response","ok","json","Promise","reject","Error","fetchValue","value","fetchMovie","data","genres","flatMap","name","join","fetchCast","mapperCast","cast","mapperReviews","results","mapperMoviesTitle","title","profile_path","character"],"sourceRoot":""}