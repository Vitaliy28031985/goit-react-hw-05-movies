{"version":3,"file":"static/js/MovieEl.eb7eaad1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieEl/MovieEl.module.css?3199","components/MovieEl/MovieEl.jsx","service/api.js","utils/mapper.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieEl_img__vfzP9\",\"button\":\"MovieEl_button__QDROA\",\"infoFilm\":\"MovieEl_infoFilm__CfPWg\",\"title\":\"MovieEl_title__hg+zm\",\"titleText\":\"MovieEl_titleText__Wz7mG\",\"text\":\"MovieEl_text__AWIPG\",\"linkConteiner\":\"MovieEl_linkConteiner__uDoNU\",\"link\":\"MovieEl_link__vqaMX\",\"titleLink\":\"MovieEl_titleLink__-iUuH\"};","import PropTypes from 'prop-types';\nimport { useParams, Outlet, NavLink, useNavigate, useLocation  } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {fetchMovie} from '../../service/api';\nimport s from './MovieEl.module.css';\n\n\nexport default function MovieDetails()  {\nconst [movies, setMovies] = useState({});\nconst location = useLocation();\nconst navigate = useNavigate();\n\n\n\nconst {id} = useParams();\n\nuseEffect(() => {\n   fetchMovie(id).then(setMovies); \n}, [id]);\n\nconst posterUrl = `https://image.tmdb.org/t/p/w500`;\n\nconst navigateButton = () => {\n   navigate(location?.state?.from ?? navigate(-1))\n}\n\n\nreturn (\n\n<>\n<button className={s.button}  onClick={navigateButton}>Go back</button>\n<div>\n{movies.poster_path === null ? (<img className={s.img} src=\"https://via.placeholder.com/250x200\" alt={movies.title}/>) : (<img className={s.img} src={`${posterUrl}${movies.poster_path}`} alt={movies.title} />)}\n\n<div className={s.infoFilm}>\n<h2 className={s.title}>{movies.title}</h2>\n<p className={s.titleText}>Popularity: <span className={s.text}>{movies.popularity}</span></p>\n<h2 className={s.titleText}>Overview</h2>\n<p className={s.text}>{movies.overview}</p>\n<h3 className={s.titleText}>Genres</h3>\n<p className={s.text}>{movies.genres}</p>\n</div>\n<div className={s.linkConteiner}>\n   <ul>\n<p className={s.titleLink}>Additional information</p>\n<li><NavLink className={s.link} to={`cast${id}`}>Cast</NavLink></li>\n<li><NavLink className={s.link} to={`reviews${id}`}> Reviews</NavLink></li>\n</ul>\n</div>\n</div>\n\n<Outlet />\n</>\n);\n\n};\n\nMovieDetails.propTypes = {\n   movie: PropTypes.objectOf(\n     PropTypes.shape({\n       title: PropTypes.string.isRequired,\n       popularity: PropTypes.number.isRequired,\n       overview: PropTypes.string.isRequired,\n       genres: PropTypes.string.isRequired,\n       poster_path: PropTypes.string.isRequired,\n     })\n   ),\n };","import {mapperCast} from '../utils/mapper';\nimport {mapperReviews} from '../utils/mapper';\n// import {mapperMovieEl} from '../utils/mapper';\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'da16a0fca1d07603f8ad5b63eb5e61b5';\n\nexport const fetchTrendingDay = () => {\n  return fetch(`${URL}trending/movie/day?api_key=${KEY}`)\n   .then(response => {\n      if(response.ok) {\n         return response.json();\n      }\n   \n      return Promise.reject(new Error('Nothing was found for your request'));})   \n};\n\nexport const fetchValue = value => {\nreturn fetch(`${URL}search/movie?api_key=${KEY}&query=${value}`)\n.then(response => {\n   if(response.ok) {\n      return response.json();\n   }\n\n   return Promise.reject(new Error('Nothing was found for your request'));})   \n};\n\nexport const fetchMovie = id => {\n   return fetch(`${URL}movie/${id}?api_key=${KEY}`)\n   .then(response => response.json())\n   .then(data => { \n   data.genres = data.genres.flatMap(({ name }) => name).join(', ');\n   return data; \n    \n   })\n  \n};\n\nexport const fetchCast = id => {\n   return fetch(`${URL}movie/${id}/credits?api_key=${KEY}`)\n   .then(response => response.json())\n   .then(data => {\n      return mapperCast(data.cast);\n   });\n};\n\nexport const fetchReviews = id => {\nreturn fetch(`${URL}movie/${id}/reviews?api_key=${KEY}`)\n.then(response => response.json())\n.then(data => {\n   return mapperReviews(data.results);\n})\n};","export const  mapperMoviesTitle = (movies) => {\n   return movies.map(({id, title, }) =>\n   ({\n      id,\n      title,\n   }));\n   };\n\n   export const  mapperCast = (movies) => {\n      return movies.map(({id, name, profile_path, character}) =>\n      ({\n        id,\n        name,\n        profile_path,\n        character, \n      }));\n      };  \n\n      export const mapperMovieEl = (movies) => {\n         return movies.map(({ title, popularity, overview, genres, poster_path}) =>\n         ({\n           genres,\n           title,\n           popularity,\n           overview,\n           poster_path, \n         }));\n         };  \n\n         export const mapperReviews = (movies) => {\n            return movies.map(({ id, author, content,}) =>\n            ({\n              id,\n              author,\n              content,\n            }));\n            };  "],"names":["MovieDetails","useState","movies","setMovies","location","useLocation","navigate","useNavigate","id","useParams","useEffect","fetchMovie","then","className","s","onClick","state","from","poster_path","src","alt","title","popularity","overview","genres","to","URL","KEY","fetchTrendingDay","fetch","response","ok","json","Promise","reject","Error","fetchValue","value","data","flatMap","name","join","fetchCast","mapperCast","cast","fetchReviews","mapperReviews","results","mapperMoviesTitle","map","profile_path","character","author","content"],"sourceRoot":""}